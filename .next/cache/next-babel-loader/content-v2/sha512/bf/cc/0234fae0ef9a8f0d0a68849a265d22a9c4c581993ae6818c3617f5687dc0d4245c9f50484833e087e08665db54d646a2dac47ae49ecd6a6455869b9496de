{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pinduca/\\xC1rea de Trabalho/NLW-4-react/moveit/src/contexts/ChallengesContext.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { createContext, useEffect, useState } from 'react';\nimport challenges from '../../challenges.json';\nimport Cookies from 'js-cookie';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  let {\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const {\n    0: level,\n    1: setLevel\n  } = useState(rest.level || 1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(rest.currentExperience || 0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(rest.challengesCompleted || 0);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n  useEffect(() => {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification(\"Novo desafio!!\", {\n        body: `Valendo ${challenge.amount} xp!`\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    const {\n      amount\n    } = activeChallenge;\n    let finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      challengesCompleted,\n      levelUp,\n      startNewChallenge,\n      activeChallenge,\n      resetChallenge,\n      experienceToNextLevel,\n      completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/pinduca/Área de Trabalho/NLW-4-react/moveit/src/contexts/ChallengesContext.tsx"],"names":["createContext","useEffect","useState","challenges","Cookies","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from 'react';\nimport challenges from '../../challenges.json';\nimport Cookies from 'js-cookie';\n\ninterface Challenge{\n    type: 'body' | 'eye',\n    description: string,\n    amount: number\n}\n\ninterface ChallengesContextData{\n    level: number,\n    currentExperience: number, \n    challengesCompleted: number, \n    levelUp: () => void,\n    startNewChallenge: ()=> void ,\n    activeChallenge: Challenge,\n    resetChallenge: ()=> void,\n    experienceToNextLevel: number,\n    completeChallenge: ()=> void\n}\n\ninterface ChallengesProviderProps{\n    children: ReactNode\n    level: number,\n    currentExperience: number,\n    challengesCompleted: number\n  \n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData );\n\nexport function ChallengesProvider({ children, ...rest } : ChallengesProviderProps){\n\n\n    const [level, setLevel] = useState(rest.level || 1);\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience || 0);\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted || 0);\n\n    const [activeChallenge, setActiveChallenge] = useState(null);\n    \n    const experienceToNextLevel = Math.pow((level+1) * 4, 2);\n\n    useEffect(()=> {\n        Notification.requestPermission();\n    },[])\n\n    useEffect(()=>{\n        Cookies.set('level',String(level));\n        Cookies.set('currentExperience',String(currentExperience));\n        Cookies.set('challengesCompleted',String(challengesCompleted));\n    }, [ level, currentExperience, challengesCompleted])\n\n    function levelUp(){\n        setLevel(level+1);\n    }\n\n    function startNewChallenge(){\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n        const challenge = challenges[randomChallengeIndex];\n        \n        setActiveChallenge(challenge);\n\n        new Audio('/notification.mp3').play();\n\n        if(Notification.permission === 'granted'){\n            new Notification(\"Novo desafio!!\", {\n                body: `Valendo ${challenge.amount} xp!`\n            })\n        }\n    }\n\n    function resetChallenge(){\n        setActiveChallenge(null);\n    }\n\n    function completeChallenge(){\n\n        if(!activeChallenge){\n            return;\n        }\n        const { amount } = activeChallenge;\n\n        let finalExperience = currentExperience + amount;\n\n        if (finalExperience >= experienceToNextLevel){\n            finalExperience = finalExperience - experienceToNextLevel;\n            levelUp();\n        }\n\n        setCurrentExperience(finalExperience);\n        setActiveChallenge(null);\n        setChallengesCompleted(challengesCompleted + 1);\n\n        }\n\n    return(\n        <ChallengesContext.Provider value={ \n        { \n        level,\n        currentExperience, \n        challengesCompleted, \n        levelUp,\n        startNewChallenge,\n        activeChallenge,\n        resetChallenge,\n        experienceToNextLevel,\n        completeChallenge\n        } \n        }>\n            {children}\n        </ChallengesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}