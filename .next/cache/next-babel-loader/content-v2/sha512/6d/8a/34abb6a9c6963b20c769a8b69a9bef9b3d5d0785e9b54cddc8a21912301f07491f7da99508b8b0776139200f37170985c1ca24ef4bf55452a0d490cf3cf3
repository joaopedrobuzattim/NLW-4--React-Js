{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pinduca/\\xC1rea de Trabalho/NLW-4-react/moveit/src/components/Countdown.tsx\";\nimport { useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nlet countdownTimeout;\nexport function Countdown() {\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n  function startCountDown() {\n    setIsActive(true);\n  }\n\n  function resetCountDown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: `${styles.countdownButton}`,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetCountDown,\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCountDown,\n        type: \"button\",\n        className: styles.countdownButton,\n        children: \"Iniciar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/pinduca/Área de Trabalho/NLW-4-react/moveit/src/components/Countdown.tsx"],"names":["useEffect","styles","countdownTimeout","Countdown","minuteLeft","minuteRight","String","minutes","padStart","split","secondLeft","secondRight","seconds","startCountDown","setIsActive","resetCountDown","clearTimeout","setTime","isActive","time","setTimeout","setHasFinished","startNewChallenge","countdownContainer","hasFinished","countdownButton","countdownButtonActive"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,SAAT,GAAoB;AAIvB,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACC,OAAD,CAAN,CAAgBC,QAAhB,CAAyB,CAAzB,EAA6B,GAA7B,EAAkCC,KAAlC,CAAwC,EAAxC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BL,MAAM,CAACM,OAAD,CAAN,CAAgBJ,QAAhB,CAAyB,CAAzB,EAA6B,GAA7B,EAAkCC,KAAlC,CAAwC,EAAxC,CAAlC;;AAEA,WAASI,cAAT,GAAyB;AACrBC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASC,cAAT,GAAyB;AACrBC,IAAAA,YAAY,CAACd,gBAAD,CAAZ;AACAY,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAG,IAAAA,OAAO,CAAC,MAAM,EAAP,CAAP;AACH;;AAEDjB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGkB,QAAQ,IAAIC,IAAI,GAAG,CAAtB,EAAwB;AACpBjB,MAAAA,gBAAgB,GAAGkB,UAAU,CAAC,MAAI;AAC9BH,QAAAA,OAAO,CAACE,IAAI,GAAC,CAAN,CAAP;AACH,OAF4B,EAE3B,IAF2B,CAA7B;AAGH,KAJD,MAIO,IAAID,QAAQ,IAAIC,IAAI,KAAK,CAAzB,EAA2B;AAC9BE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAP,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAQ,MAAAA,iBAAiB;AACpB;AACJ,GAVQ,EAUP,CAACJ,QAAD,EAAWC,IAAX,CAVO,CAAT;AAYA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACsB,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOnB;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOK;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAaCa,WAAW,gBACR;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,SAAS,EAAG,GAAEvB,MAAM,CAACwB,eAAgB,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAMR;AAAA,gBACEP,QAAQ,gBACN;AAAQ,QAAA,OAAO,EAAEH,cAAjB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAA+C,QAAA,SAAS,EAAG,GAAEd,MAAM,CAACwB,eAAgB,IAAGxB,MAAM,CAACyB,qBAAsB,EAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,gBAKN;AAAQ,QAAA,OAAO,EAAEb,cAAjB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAA+C,QAAA,SAAS,EAAEZ,MAAM,CAACwB,eAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,qBAnBJ;AAAA,kBADJ;AAuCH","sourcesContent":["import { useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\n\nlet countdownTimeout: NodeJS.Timeout;\n\nexport function Countdown(){\n\n    \n\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2 , '0').split('');\n    const [secondLeft, secondRight] = String(seconds).padStart(2 , '0').split('');\n\n    function startCountDown(){\n        setIsActive(true);\n    }\n\n    function resetCountDown(){\n        clearTimeout(countdownTimeout);\n        setIsActive(false);\n        setTime(0.1 * 60);\n    }\n\n    useEffect(()=>{\n        if(isActive && time > 0){\n            countdownTimeout = setTimeout(()=>{\n                setTime(time-1);\n            },1000)\n        } else if (isActive && time === 0){\n            setHasFinished(true);\n            setIsActive(false);\n            startNewChallenge();\n        }\n    },[isActive, time] )\n\n    return(\n        <>\n        <div className={styles.countdownContainer}>\n            <div>\n                <span>{minuteLeft}</span>\n                <span>{minuteRight}</span>\n            </div>\n            <span>:</span> \n            <div>\n                <span>{secondLeft}</span>\n                <span>{secondRight}</span>\n            </div>\n        </div>\n\n        {hasFinished ? (\n            <button disabled className={`${styles.countdownButton}`}>\n                Ciclo encerrado\n            </button>\n            ) : \n            (\n            <>\n            { isActive ? (\n                <button onClick={resetCountDown} type=\"button\" className={`${styles.countdownButton} ${styles.countdownButtonActive}`}>\n                    Abandonar ciclo\n                </button>)\n                : (\n                <button onClick={startCountDown} type=\"button\" className={styles.countdownButton}>\n                    Iniciar ciclo\n                </button>\n                )}\n                </>\n            )\n        }\n\n        \n        \n        \n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}