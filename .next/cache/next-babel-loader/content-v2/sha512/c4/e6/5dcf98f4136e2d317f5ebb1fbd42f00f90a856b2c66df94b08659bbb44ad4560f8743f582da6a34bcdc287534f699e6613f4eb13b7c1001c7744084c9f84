{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/home/pinduca/\\xC1rea de Trabalho/NLW-4-react/moveit/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/pinduca/\\xC1rea de Trabalho/NLW-4-react/moveit/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport challenges from '../../challenges.json';\nimport Cookies from 'js-cookie';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState(rest.level || 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(rest.currentExperience || 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(rest.challengesCompleted || 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLevelUpModalOpen = _useState5[0],\n      setIsLevelModalOpen = _useState5[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelModalOpen(true);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification(\"Novo desafio!!\", {\n        body: \"Valendo \".concat(challenge.amount, \" xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelModalOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      completeChallenge: completeChallenge,\n      closeLevelUpModal: closeLevelUpModal\n    },\n    children: [children, isLevelUpModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"SInqIUza3vVISKIFr/3HLuT3DqQ=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/pinduca/Área de Trabalho/NLW-4-react/moveit/src/contexts/ChallengesContext.tsx"],"names":["React","createContext","useEffect","useState","challenges","Cookies","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isLevelUpModalOpen","setIsLevelModalOpen","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience","closeLevelUpModal"],"mappings":"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","sourcesContent":["import React, { createContext, ReactNode, useEffect, useState } from 'react';\nimport challenges from '../../challenges.json';\nimport Cookies from 'js-cookie';\nimport { LevelUpModal } from '../components/LevelUpModal';\n\ninterface Challenge{\n    type: 'body' | 'eye',\n    description: string,\n    amount: number\n}\n\ninterface ChallengesContextData{\n    level: number,\n    currentExperience: number, \n    challengesCompleted: number, \n    levelUp: () => void,\n    startNewChallenge: ()=> void ,\n    activeChallenge: Challenge,\n    resetChallenge: ()=> void,\n    experienceToNextLevel: number,\n    completeChallenge: ()=> void,\n    closeLevelUpModal: ()=> void\n}\n\ninterface ChallengesProviderProps{\n    children: ReactNode\n    level: number,\n    currentExperience: number,\n    challengesCompleted: number\n  \n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData );\n\nexport function ChallengesProvider({ children, ...rest } : ChallengesProviderProps){\n\n\n    const [level, setLevel] = useState(rest.level || 1);\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience || 0);\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted || 0);\n    const [activeChallenge, setActiveChallenge] = useState(null);\n    \n    const [isLevelUpModalOpen, setIsLevelModalOpen] = useState(false);\n\n    const experienceToNextLevel = Math.pow((level+1) * 4, 2);\n\n    useEffect(()=> {\n        Notification.requestPermission();\n    },[])\n\n    useEffect(()=>{\n        Cookies.set('level',String(level));\n        Cookies.set('currentExperience',String(currentExperience));\n        Cookies.set('challengesCompleted',String(challengesCompleted));\n    }, [ level, currentExperience, challengesCompleted])\n\n    function levelUp(){\n        setLevel(level+1);\n        setIsLevelModalOpen(true);\n    }\n\n    function startNewChallenge(){\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n        const challenge = challenges[randomChallengeIndex];\n        \n        setActiveChallenge(challenge);\n\n        new Audio('/notification.mp3').play();\n\n        if(Notification.permission === 'granted'){\n            new Notification(\"Novo desafio!!\", {\n                body: `Valendo ${challenge.amount} xp!`\n            })\n        }\n    }\n\n    function resetChallenge(){\n        setActiveChallenge(null);\n    }\n\n    function completeChallenge(){\n\n        if(!activeChallenge){\n            return;\n        }\n        const { amount } = activeChallenge;\n\n        let finalExperience = currentExperience + amount;\n\n        if (finalExperience >= experienceToNextLevel){\n            finalExperience = finalExperience - experienceToNextLevel;\n            levelUp();\n        }\n\n        setCurrentExperience(finalExperience);\n        setActiveChallenge(null);\n        setChallengesCompleted(challengesCompleted + 1);\n\n        }\n\n        function closeLevelUpModal(){\n            setIsLevelModalOpen(false);\n        }\n\n    return(\n        <ChallengesContext.Provider value={ \n        { \n        level,\n        currentExperience, \n        challengesCompleted, \n        levelUp,\n        startNewChallenge,\n        activeChallenge,\n        resetChallenge,\n        experienceToNextLevel,\n        completeChallenge,\n        closeLevelUpModal\n        } \n        }>\n            {children}\n            { isLevelUpModalOpen && <LevelUpModal /> }\n        </ChallengesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}