{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pinduca/\\xC1rea de Trabalho/NLW-4-react/moveit/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport challenges from '../../challenges.json';\nimport Cookies from 'js-cookie';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification(\"Novo desafio!!\", {\n        body: \"Valendo \".concat(challenge.amount, \" xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"POCod5lVJzLDZnxgMknXr3PjRHI=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/pinduca/Área de Trabalho/NLW-4-react/moveit/src/contexts/ChallengesContext.tsx"],"names":["createContext","useEffect","useState","challenges","Cookies","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from 'react';\nimport challenges from '../../challenges.json';\nimport Cookies from 'js-cookie';\n\ninterface Challenge{\n    type: 'body' | 'eye',\n    description: string,\n    amount: number\n}\n\ninterface ChallengesContextData{\n    level: number,\n    currentExperience: number, \n    challengesCompleted: number, \n    levelUp: () => void,\n    startNewChallenge: ()=> void ,\n    activeChallenge: Challenge,\n    resetChallenge: ()=> void,\n    experienceToNextLevel: number,\n    completeChallenge: ()=> void\n}\n\ninterface ChallengesProviderProps{\n    children: ReactNode\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData );\n\nexport function ChallengesProvider({ children } : ChallengesProviderProps){\n\n\n    const [level, setLevel] = useState(1);\n    const [currentExperience, setCurrentExperience] = useState(0);\n    const [challengesCompleted, setChallengesCompleted] = useState(0);\n\n    const [activeChallenge, setActiveChallenge] = useState(null);\n    \n    const experienceToNextLevel = Math.pow((level+1) * 4, 2);\n\n    useEffect(()=> {\n        Notification.requestPermission();\n    },[])\n\n    useEffect(()=>{\n        Cookies.set('level',String(level));\n        Cookies.set('currentExperience',String(currentExperience));\n        Cookies.set('challengesCompleted',String(challengesCompleted));\n    }, [ level, currentExperience, challengesCompleted])\n\n    function levelUp(){\n        setLevel(level+1);\n    }\n\n    function startNewChallenge(){\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n        const challenge = challenges[randomChallengeIndex];\n        \n        setActiveChallenge(challenge);\n\n        new Audio('/notification.mp3').play();\n\n        if(Notification.permission === 'granted'){\n            new Notification(\"Novo desafio!!\", {\n                body: `Valendo ${challenge.amount} xp!`\n            })\n        }\n    }\n\n    function resetChallenge(){\n        setActiveChallenge(null);\n    }\n\n    function completeChallenge(){\n\n        if(!activeChallenge){\n            return;\n        }\n        const { amount } = activeChallenge;\n\n        let finalExperience = currentExperience + amount;\n\n        if (finalExperience >= experienceToNextLevel){\n            finalExperience = finalExperience - experienceToNextLevel;\n            levelUp();\n        }\n\n        setCurrentExperience(finalExperience);\n        setActiveChallenge(null);\n        setChallengesCompleted(challengesCompleted + 1);\n\n        }\n\n    return(\n        <ChallengesContext.Provider value={ \n        { \n        level,\n        currentExperience, \n        challengesCompleted, \n        levelUp,\n        startNewChallenge,\n        activeChallenge,\n        resetChallenge,\n        experienceToNextLevel,\n        completeChallenge\n        } \n        }>\n            {children}\n        </ChallengesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}